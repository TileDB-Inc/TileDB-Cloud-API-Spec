swagger: "2.0"
info:
  description: TileDB Storage Platform REST API
  title: Tiledb Storage Platform API
  version: 1.4.0

produces:
  - application/json
consumes:
  - application/json

schemes:
  - http
  - https

basePath: /v3

securityDefinitions:
  BasicAuth:
    type: basic
  ApiKeyAuth:
    type: apiKey
    in: header
    name: X-TILEDB-REST-API-KEY
  OAuth2:
    type: oauth2
    flow: accessCode
    authorizationUrl: https://oauth2.tiledb.com/oauth2/authorize
    tokenUrl: https://oauth2.tiledb.com/oauth2/token
    scopes:
      read: Grants read access
      write: Grants write access
      admin: Grants read and write access to administrative information

security:
  - BasicAuth: []
  - ApiKeyAuth: []
  # Commented out beacause this breaks the python autogenerated client
  # It always sets the Bearer authorization header even when empty :/
  # - OAuth2: [read, write, admin]

definitions:
  Datatype:
    description: TileDB data type
    type: string
    enum:
      # 32-bit signed integer
      - INT32
      # 64-bit signed integer
      - INT64
      # 32-bit floating point value
      - FLOAT32
      # 64-bit floating point value
      - FLOAT64
      # Character
      - CHAR
      # 8-bit signed integer
      - INT8
      # 8-bit unsigned integer
      - UINT8
      # 16-bit signed integer
      - INT16
      # 16-bit unsigned integer
      - UINT16
      # 32-bit unsigned integer
      - UINT32
      # 64-bit unsigned integer
      - UINT64
      # ASCII string
      - STRING_ASCII
      # UTF-8 string
      - STRING_UTF8
      # UTF-16 string
      - STRING_UTF16
      # UTF-32 string
      - STRING_UTF32
      # UCS2 string
      - STRING_UCS2
      # UCS4 string
      - STRING_UCS4
      # Years
      - DATETIME_YEAR
      # Months
      - DATETIME_MONTH
      # Weeks
      - DATETIME_WEEK
      # Days
      - DATETIME_DAY
      # Hours
      - DATETIME_HR
      # Minutes
      - DATETIME_MIN
      # Seconds
      - DATETIME_SEC
      # Milliseconds
      - DATETIME_MS
      # Microseconds
      - DATETIME_US
      # Nanoseconds
      - DATETIME_NS
      # Picoseconds
      - DATETIME_PS
      # Femtoseconds
      - DATETIME_FS
      # Attoseconds
      - DATETIME_AS
      # This can be any datatype. Must store (type tag, value) pairs.
      - ANY

  Layout:
    description: Layout of array
    type: string
    enum:
      # Row-major layout
      - row-major
      # Column-major layout
      - col-major
      # Global-order layout
      - global-order
      # Unordered layout
      - unordered

  Querytype:
    description: Type of query
    type: string
    enum:
      # READ
      - READ
      # Write
      - WRITE

  Querystatus:
    description: Status of query
    type: string
    enum:
      # FAILED
      - FAILED
      # COMPLETED
      - COMPLETED
      # INPROGRESS
      - INPROGRESS
      # INCOMPLETE
      - INCOMPLETE
      # UNINITIALIZED
      - UNINITIALIZED

  DomainArray:
    description: Domain object for an array of each type
    type: object
    properties:
      int8:
        type: array
        x-omitempty: true
        items:
          type: integer
          format: int8
      uint8:
        type: array
        x-omitempty: true
        items:
          type: integer
          format: uint8
      int16:
        type: array
        x-omitempty: true
        items:
          type: integer
          format: int16
      uint16:
        type: array
        x-omitempty: true
        items:
          type: integer
          format: uint16
      int32:
        type: array
        x-omitempty: true
        items:
          type: integer
          format: int32
      uint32:
        type: array
        x-omitempty: true
        items:
          type: integer
          format: uint32
      int64:
        type: array
        x-omitempty: true
        items:
          type: integer
          format: int64
      uint64:
        type: array
        x-omitempty: true
        items:
          type: integer
          format: uint64
      float32:
        type: array
        x-omitempty: true
        items:
          type: number
          format: float
      float64:
        type: array
        x-omitempty: true
        items:
          type: number
          format: double

  Array:
    description: Represents an open array
    type: object
    required:
      - queryType
      - uri
    properties:
      queryType:
        description: Array opened for query type
        $ref: "#/definitions/Querytype"
      uri:
        description: Array uri
        type: string
      endTimestamp:
        description: Ending timestamp (epoch milliseconds) array is opened at
        type: number
        format: uint64
        example: 1540471791873
      startTimestamp:
        description: Starting timestamp (epoch milliseconds) array is opened at
        type: number
        format: uint64
        example: 1540471791873
      arraySchemaLatest:
        description: Latest array schema
        $ref: "#/definitions/ArraySchema"
      arraySchemasAll:
        description: Array's schemas
        $ref: "#/definitions/ArraySchemaMap"
      arrayMetadata:
        description: Array's metadata
        $ref: "#/definitions/ArrayMetadata"
      nonEmptyDomain:
        description: Array's non empty domain
        $ref: "#/definitions/NonEmptyDomainList"
      arrayDirectory:
        description: Array directory (for reads)
        $ref: "#/definitions/ArrayDirectory"
      fragmentMetadataAll:
        description: metadata for all fragments (for reads)
        type: array
        x-omitempty: true
        items:
          $ref: "#/definitions/FragmentMetadata"
      openedAtEndTimestamp:
        description: The ending timestamp that the array was last opened at
        type: number
        format: uint64

  FragmentMetadata:
    type: object
    description: Metadata of a fragment
    properties:
      fileSizes:
        description: The size of each attribute file
        type: array
        x-omitempty: true
        items:
          type: number
          format: uint64
      fileVarSizes:
        description: The size of each var attribute file
        type: array
        x-omitempty: true
        items:
          type: number
          format: uint64
      fileValiditySizes:
        description: The size of each validity attribute file
        type: array
        x-omitempty: true
        items:
          type: number
          format: uint64
      fragmentUri:
        description: The uri of the fragment this metadata belongs to
        type: string
      hasTimestamps:
        description: True if the fragment has timestamps
        type: boolean
      hasDeleteMeta:
        description: True if the fragment has delete metadata
        type: boolean
      sparseTileNum:
        description: The number of sparse tiles
        type: number
        format: uint64
      tileIndexBase:
        description: Used to track the tile index base between global order writes
        type: number
        format: uint64
      tileOffsets:
        description: Tile offsets in their attribute files
        type: array
        x-omitempty: true
        items:
          type: array
          items:
            type: number
            format: uint64
      tileVarOffsets:
        description: Variable tile offsets in their attribute files
        type: array
        x-omitempty: true
        items:
          type: array
          items:
            type: number
            format: uint64
      tileVarSizes:
        description: The sizes of the uncompressed variable tiles
        type: array
        x-omitempty: true
        items:
          type: array
          items:
            type: number
            format: uint64
      tileValidityOffsets:
        description: Validity tile offests in their attribute files
        type: array
        x-omitempty: true
        items:
          type: array
          items:
            type: number
            format: uint64
      tileMinBuffer:
        description: tile min buffers
        type: array
        x-omitempty: true
        items:
          type: array
          items:
            type: number
            format: uint8
      tileMinVarBuffer:
        description: tile min buffers for var length data
        type: array
        x-omitempty: true
        items:
          type: array
          items:
            type: number
            format: uint8
      tileMaxBuffer:
        description: tile max buffers
        type: array
        x-omitempty: true
        items:
          type: array
          items:
            type: number
            format: uint8
      tileMaxVarBuffer:
        description: tile max buffers for var length data
        type: array
        x-omitempty: true
        items:
          type: array
          items:
            type: number
            format: uint8
      tileSums:
        description: tile sum values
        type: array
        x-omitempty: true
        items:
          type: array
          items:
            type: number
            format: uint8
      tileNullCounts:
        description: tile null count values
        type: array
        x-omitempty: true
        items:
          type: array
          items:
            type: number
            format: uint64
      fragmentMins:
        description: fragment min values
        type: array
        x-omitempty: true
        items:
          type: array
          items:
            type: number
            format: uint8
      fragmentMaxs:
        description: fragment max values
        type: array
        x-omitempty: true
        items:
          type: array
          items:
            type: number
            format: uint8
      fragmentSums:
        description: fragment sum values
        type: array
        x-omitempty: true
        items:
          type: number
          format: uint64
      fragmentNullCounts:
        description: fragment null count values
        type: array
        x-omitempty: true
        items:
          type: number
          format: uint64
      version:
        description: the format version of this metadata
        type: integer
        format: uint32
      timestampRange:
        description: A pair of timestamps for fragment
        type: array
        x-omitempty: true
        items:
          type: number
          format: uint64
      lastTileCellNum:
        description: The number of cells in the last tile
        type: integer
        format: uint64
      nonEmptyDomain:
        description: The non empty domain of the fragment
        $ref: "#/definitions/NonEmptyDomainList"
      rtree:
        description: The RTree for the MBRs serialized as a blob
        type: string
        format: binary
      hasConsolidatedFooter:
        description: if the fragment metadata footer appears in a consolidated file
        type: boolean
      gtOffsets:
        description: The start offsets of the generic tiles stored in the metadata file
        $ref: "#/definitions/GenericTileOffsets"

  GenericTileOffsets:
    type: object
    description: Array directory (for reads)
    properties:
      rtree:
        description: RTree serialized as a blob
        type: number
        format: uint64
      tileOffsets:
        description: tile offsets
        type: array
        x-omitempty: true
        items:
          type: number
          format: uint64
      tileVarOffsets:
        description: variable tile offsets
        type: array
        x-omitempty: true
        items:
          type: number
          format: uint64
      tileVarSizes:
        description: sizes of the uncompressed variable tiles offsets
        type: array
        x-omitempty: true
        items:
          type: number
          format: uint64
      tileValidityOffsets:
        description: tile validity offsets
        type: array
        x-omitempty: true
        items:
          type: number
          format: uint64
      tileMinOffsets:
        description: min tile offsets
        type: array
        x-omitempty: true
        items:
          type: number
          format: uint64
      tileMaxOffsets:
        description: max tile offsets
        type: array
        x-omitempty: true
        items:
          type: number
          format: uint64
      tileSumOffsets:
        description: tile sum offsets
        type: array
        x-omitempty: true
        items:
          type: number
          format: uint64
      tileNullCountOffsets:
        description: null count offsets
        type: array
        x-omitempty: true
        items:
          type: number
          format: uint64
      fragmentMinMaxSumNullCountOffset:
        description: fragment min/max/sum/nullcount offsets
        type: number
        format: uint64
      processedConditionsOffsets:
        description: processed conditions offsets
        type: number
        format: uint64

  ArrayDirectory:
    type: object
    description: Array directory (for reads)
    properties:
      unfilteredFragmentUris:
        description: fragment URIs
        type: array
        x-omitempty: true
        items:
          type: string
      consolidatedCommitUris:
        description: consolidated commit URI set
        type: array
        x-omitempty: true
        items:
          type: string
      arraySchemaUris:
        description: URIs of all the array schema files
        type: array
        x-omitempty: true
        items:
          type: string
      latestArraySchemaUri:
        description: latest array schema URI.
        type: string
      arrayMetaUrisToVacuum:
        description: the array metadata files to vacuum
        type: array
        x-omitempty: true
        items:
          type: string
      arrayMetaVacUrisToVacuum:
        description: the array metadata vac files to vacuum
        type: array
        x-omitempty: true
        items:
          type: string
      commitUrisToConsolidate:
        description: the commit files to consolidate
        type: array
        x-omitempty: true
        items:
          type: string
      commitUrisToVacuum:
        description: the commit files to vacuum
        type: array
        x-omitempty: true
        items:
          type: string
      consolidatedCommitUrisToVacuum:
        description: the consolidated commit files to vacuum
        type: array
        x-omitempty: true
        items:
          type: string
      fragmentMetaUris:
        description: the URIs of the consolidated fragment metadata files
        type: array
        x-omitempty: true
        items:
          type: string
      timestampStart:
        description: Only the files created after timestamp_start are listed
        type: number
        format: uint64
      timestampEnd:
        description: Only the files created before timestamp_end are listed
        type: number
        format: uint64
      arrayMetaUris:
        description: the timestamped filtered array metadata URIs, after removing the ones that need to be vacuumed and those that do not fall within
        type: array
        x-omitempty: true
        items:
          $ref: "#/definitions/TimestampedURI"
      deleteAndUpdateTileLocation:
        description: the location of delete tiles
        type: array
        x-omitempty: true
        items:
          $ref: "#/definitions/DeleteAndUpdateTileLocation"

  DeleteAndUpdateTileLocation:
    type: object
    description: the location of delete tiles
    properties:
      uri:
        description: the uri
        type: string
      conditionMarker:
        type: string
      offset:
        type: number
        format: uint64

  TimestampedURI:
    type: object
    description: the timestamped filtered array metadata URIs, after removing the ones that need to be vacuumed and those that do not fall within
    properties:
      uri:
        description: the uri
        type: string
      timestampStart:
        description: start of timestamp
        type: number
        format: uint64
      timestampEnd:
        description: end of timestamp
        type: number
        format: uint64

  ArraySchemaMap:
    type: object
    description: array's schemas
    properties:
      entries:
        description: List of array schemas entries
        type: array
        x-omitempty: true
        items:
          $ref: "#/definitions/ArraySchemaEntry"

  ArraySchemaEntry:
    type: object
    description: key/value pair representing an array schema map entry
    properties:
      key:
        type: string
      value:
        $ref: "#/definitions/ArraySchema"

  NonEmptyDomainList:
    type: object
    description: object containing non empty domains
    properties:
      nonEmptyDomains:
        description: Array's non empty domain
        type: array
        x-omitempty: true
        items:
          $ref: "#/definitions/NonEmptyDomain"

  NonEmptyDomain:
    type: object
    description: object representing a non-empty domain
    required:
      - nonEmptyDomain
      - isEmpty
    properties:
      nonEmptyDomain:
        description: Non Empty Domain of array
        $ref: "#/definitions/DomainArray"
      isEmpty:
        description: Is non-empty domain really empty?
        type: boolean
        example: False
      sizes:
        description: Number of elements in DomainArray for var length
        type: array
        items:
          type: integer
          format: uint64

  ArrayType:
    description: TileDB array type
    type: string
    enum:
      # Dense array
      - dense
      # Sparse array
      - sparse

  Attribute:
    description: Attribute of array
    type: object
    required:
      - name
      - type
      - filterPipeline
      - cellValNum
    properties:
      name:
        description: Attribute name
        type: string
        example: attribute1
      type:
        $ref: "#/definitions/Datatype"
      filterPipeline:
        $ref: "#/definitions/FilterPipeline"
      cellValNum:
        description: Attribute number of values per cell
        type: integer
        example: 1
      nullable:
        description: Is attribute nullable
        type: boolean
        example: true
      fillValueValidity:
        description: Default validity fill value for nullable attributes
        type: boolean
        example: true
      fillValue:
        description: The default fill value
        type: array
        items:
          type: integer
          format: uint8

  FilterType:
    description: TileDB filter types
    type: string
    enum:
      # No-op filter
      - FILTER_NONE
      # Gzip compressor
      - FILTER_GZIP
      # Zstandard compressor
      - FILTER_ZSTD
      # LZ4 compressor
      - FILTER_LZ4
      # Run-length encoding compressor
      - FILTER_RLE
      # Bzip2 compressor
      - FILTER_BZIP2
      # Double-delta compressor
      - FILTER_DOUBLE_DELTA
      # Bit width reduction filter.
      - FILTER_BIT_WIDTH_REDUCTION
      # Bitshuffle filter.
      - FILTER_BITSHUFFLE
      # Byteshuffle filter.
      - FILTER_BYTESHUFFLE
      # Positive-delta encoding filter.
      - FILTER_POSITIVE_DELTA
      # Scale-float filter
      - FILTER_SCALE_FLOAT
      # Webp filter
      - FILTER_WEBP
      # CHECKSUM_MD5 filter
      - FILTER_CHECKSUM_MD5
      # CHECKSUM_SHA256 filter
      - FILTER_CHECKSUM_SHA256
      # DICTIONARY filter
      - FILTER_DICTIONARY

  Filter:
      description: Filter
      type: object
      required:
        - type
      properties:
        type:
          description: Filter type
          $ref: "#/definitions/FilterType"
        floatScaleConfig:
          description: Filter type
          $ref: "#/definitions/FloatScaleConfig"
        data:
          description: Filter data
          type: object
          properties:
            text:
              type: string
            bytes:
              type: array
              items:
                type: integer
                format: uint8
            int8:
              type: integer
              format: int8
            uint8:
              type: integer
              format: uint8
            int16:
              type: integer
              format: int16
            uint16:
              type: integer
              format: uint16
            int32:
              type: integer
              format: int32
            uint32:
              type: integer
              format: uint32
            int64:
              type: integer
              format: int64
            uint64:
              type: integer
              format: uint64
            float32:
              type: integer
              format: float
            float64:
              type: integer
              format: double

  FloatScaleConfig:
    description: FloatScaleConfig
    type: object
    properties:
      scale:
        type: integer
        format: double
      offset:
        type: integer
        format: double
      byteWidth:
        type: integer
        format: uint64

  FilterPipeline:
    description: One or more filters to apply
    type: object
    properties:
      filters:
        type: array
        x-omitempty: true
        items:
          $ref: "#/definitions/Filter"

  Dimension:
    description: Dimension of array
    type: object
    required:
      - type
      - domain
      - nullTileExtent
    properties:
      name:
        description: Dimension name
        type: string
        example: "row"
      type:
        $ref: "#/definitions/Datatype"
      domain:
        description: extent of domain
        $ref: "#/definitions/DomainArray"
      nullTileExtent:
        description: Is tile extent null
        type: boolean
        example: true
      tileExtent:
        description: Extent of tile
        type: object
        properties:
          int8:
            type: integer
            format: int8
          uint8:
            type: integer
            format: uint8
          int16:
            type: integer
            format: int16
          uint16:
            type: integer
            format: uint16
          int32:
            type: integer
            format: int32
          uint32:
            type: integer
            format: uint32
          int64:
            type: integer
            format: int64
          uint64:
            type: integer
            format: uint64
          float32:
            type: integer
            format: float
          float64:
            type: integer
            format: double
      filterPipeline:
        x-omit-empty: true
        $ref: "#/definitions/FilterPipeline"

  Domain:
    description: Domain of array
    type: object
    required:
      - type
      - tileOrder
      - cellOrder
      - dimensions
    properties:
      type:
        $ref: "#/definitions/Datatype"
        description: Domain Type
      tileOrder:
        $ref: "#/definitions/Layout"
        description: Tile Order
      cellOrder:
        $ref: "#/definitions/Layout"
        description: Cell Order
      dimensions:
        type: array
        description: Array of dimensions
        items:
          $ref: "#/definitions/Dimension"

  ArraySchema:
    description: ArraySchema during creation or retrieval
    type: object
    required:
      - version
      - arrayType
      - tileOrder
      - cellOrder
      - capacity
      - coordsFilterPipeline
      - offsetFilterPipeline
      - domain
      - attributes
    properties:
      uri:
        description: URI of schema
        type: string
        example: "s3://<bucket>/test_array"
      name:
        description: name of schema
        type: string
      version:
        description: file format version
        type: array
        x-omitempty: true
        items:
          type: integer
        example: [1, 3, 0]
      arrayType:
        $ref: "#/definitions/ArrayType"
        description: Type of array
        example: sparse
      tileOrder:
        description: Tile order setting of array
        $ref: "#/definitions/Layout"
        example: row-major
      cellOrder:
        description: Order of cells
        $ref: "#/definitions/Layout"
        example: row-major
      capacity:
        description: Capacity of array
        type: integer
        format: uint64
        example: 100000
      coordsFilterPipeline:
        description: Filter pipeline used for coordinates (enum)
        $ref: "#/definitions/FilterPipeline"
      offsetFilterPipeline:
        description: Filter pipeline use for variable offsets (enum)
        $ref: "#/definitions/FilterPipeline"
      validityFilterPipeline:
        description: Type of compression for validity buffers (enum)
        $ref: "#/definitions/FilterPipeline"
      domain:
        description: Domain of array
        $ref: "#/definitions/Domain"
      attributes:
        description: Attributes of array
        type: array
        x-omitempty: true
        items:
          $ref: "#/definitions/Attribute"
      allowsDuplicates:
        description: True if the array allows coordinate duplicates. Applicable only to sparse arrays.
        type: boolean
      timestampRange:
        description: The list of sizes per range
        type: array
        items:
          type: integer
          format: uint64

  ArrayMetadataEntry:
    type: object
    description: key/value pair representing an array metadata map entry
    properties:
      key:
        type: string
      type:
        type: string
      valueNum:
        type: integer
        format: uint32
      value:
        type: array
        items:
          type: integer
          format: uint8
      del:
        type: boolean

  ArrayMetadata:
    type: object
    description: user's TileDB array metadata
    properties:
      entries:
        description: List of metadata entries
        type: array
        x-omitempty: true
        items:
          $ref: "#/definitions/ArrayMetadataEntry"

  AttributeBufferHeader:
    description: Represents an attribute buffer header information
    type: object
    required:
      - name
      - fixedLenBufferSizeInBytes
      - varLenBufferSizeInBytes

    properties:
      name:
        description: Attribute name
        type: string
        example: "attribute1"
      fixedLenBufferSizeInBytes:
        description: Number of bytes in the fixed-length attribute data buffer (offsets for var-len attributes)
        type: integer
        format: uint64
      varLenBufferSizeInBytes:
        description: Number of bytes in the var-length attribute data buffer
        type: integer
        format: uint64
      validityLenBufferSizeInBytes:
        description: Number of bytes for validity in case attribute is nullable
        type: integer
        format: uint64
      originalFixedLenBufferSizeInBytes:
        description: Original user set number of bytes in the fixed-length attribute data buffer
        type: integer
        format: uint64
      originalVarLenBufferSizeInBytes:
        description: Original user set number of bytes in the var-length attribute data buffer
        type: integer
        format: uint64
      originalValidityLenBufferSizeInBytes:
        description: Original user set number of bytes in the validity data buffer
        type: integer
        format: uint64

  Writer:
    type: object
    properties:
      checkCoordDups:
        type: boolean
      checkCoordOOB:
        type: boolean
      dedupCoords:
        type: boolean
      subarrayRanges:
        $ref: "#/definitions/Subarray"
      subarray:
        $ref: "#/definitions/DomainArray"

  SubarrayRanges:
    description: A set of 1D ranges for a subarray
    type: object
    properties:
      type:
        $ref: "#/definitions/Datatype"
      hasDefaultRange:
        description: True if the range is the default range
        type: boolean
      buffer:
        description: The bytes of the ranges
        type: array
        items:
          type: integer
          format: uint8
      bufferSizes:
        description: The list of sizes per range
        type: array
        items:
          type: integer
          format: uint64
      bufferStartSizes:
        description: The list of start sizes per range
        type: array
        items:
          type: integer
          format: uint64

  Subarray:
    description: A Subarray
    type: object
    properties:
      layout:
        $ref: "#/definitions/Layout"
      ranges:
        description: List of 1D ranges, one per dimension
        type: array
        x-omitempty: true
        items:
          $ref: "#/definitions/SubarrayRanges"

  SubarrayPartitioner:
    description: The subarray partitioner
    type: object
    properties:
      subarray:
        $ref: "#/definitions/Subarray"
      budget:
        description: Result size budget (in bytes) for all attributes.
        type: array
        x-omitempty: true
        items:
          $ref: "#/definitions/AttributeBufferSize"
      current:
        description: The current partition info
        type: object
        properties:
          subarray:
            $ref: "#/definitions/Subarray"
          start:
            description: PartitionInfo start
            type: integer
            format: uint64
          end:
            description: PartitionInfo end
            type: integer
            format: uint64
          splitMultiRange:
            description: PartitionInfo splitMultiRange
            type: boolean
      state:
        description: The state information for the remaining partitions to be produced
        type: object
        properties:
          start:
            description: State start
            type: integer
            format: uint64
          end:
            description: State end
            type: integer
            format: uint64
          singleRange:
            description: State singleRange
            type: array
            x-omitempty: true
            items:
              $ref: "#/definitions/Subarray"
          multiRange:
            description: State multiRange
            type: array
            x-omitempty: true
            items:
              $ref: "#/definitions/Subarray"
      memoryBudget:
        description: The memory budget for the fixed-sized attributes and the offsets of the var-sized attributes
        type: integer
        format: uint64
      memoryBudgetVar:
        description: The memory budget for the var-sized attributes
        type: integer
        format: uint64

  ReadState:
    description: state for reads
    type: object
    properties:
      initialized:
        description: True if the reader has been initialized.
        type: boolean

      overflowed:
        description: True if the query produced results that could not fit in some buffer.
        type: boolean

      unsplittable:
        description: True if the current subarray partition is unsplittable.
        type: boolean

      subarrayPartitioner:
        $ref: "#/definitions/SubarrayPartitioner"

  QueryReader:
    description: Read struct (can't be called reader due to class name conflict)
    type: object
    properties:
      layout:
        $ref: "#/definitions/Layout"
      subarray:
        $ref: "#/definitions/Subarray"
      readState:
        description: To handle incomplete read queries.
        $ref: "#/definitions/ReadState"

  Query:
    type: object
    required:
      - type
      - attributeBufferHeaders
      - layout
      - status
      - array
      - totalFixedLengthBufferBytes
      - totalVarLenBufferBytes
    properties:
      type:
        $ref: "#/definitions/Querytype"
      layout:
        $ref: "#/definitions/Layout"
      status:
        $ref: "#/definitions/Querystatus"
      attributeBufferHeaders:
        description: List of attribute buffer headers
        type: array
        x-omitempty: true
        items:
          $ref: "#/definitions/AttributeBufferHeader"
      writer:
        description: writer contains data needed for continuation of global write order queries
        $ref: "#/definitions/Writer"
      reader:
        description: reader contains data needed for continuation of reads
        $ref: "#/definitions/QueryReader"
      array:
        description: Represents an open array
        $ref: "#/definitions/Array"
      totalFixedLengthBufferBytes:
        description: Total number of bytes in fixed size attribute buffers.
        type: integer
        format: uint64
      totalVarLenBufferBytes:
        description: Total number of bytes in variable size attribute buffers.
        type: integer
        format: uint64
      totalValidityBufferBytes:
        description: Total number of bytes in validity buffers
        type: integer
        format: uint64
    x-go-type:
      import:
        package: "github.com/TileDB-Inc/TileDB-Go"
        alias: "tiledb"
      type: "Query"

  AttributeBufferSize:
    type: object
    description: object representing buffer size of an attribute
    required:
      - attribute
      - offsetBytes
      - dataBytes
    properties:
      attribute:
        description: name of attribute
        type: string
      offsetBytes:
        description: buffer size (in bytes) of offset buffer
        type: integer
        format: uint64
      dataBytes:
        description: buffer size (in bytes) of data buffer
        type: integer
        format: uint64

  Error:
    type: object
    properties:
      code:
        type: integer
        format: int64
      message:
        type: string

paths:
  /arrays/{namespace}/{array}/query/submit:
    parameters:
      - name: namespace
        in: path
        description: namespace array is in (an organization name or user's username)
        type: string
        required: true
      - name: array
        in: path
        description: name/uri of array that is url-encoded
        type: string
        required: true
      - name: type
        in: query
        description: type of query
        required: true
        type: string
      - name: Content-Type
        in: header
        description: Content Type of input and return mime
        type: string
        required: true
        default: application/json
      - name: X-Payer
        in: header
        description: Name of organization or user who should be charged for this request
        type: string
      - name: open_at
        description: open_at for array in unix epoch
        in: query
        type: integer
        format: uint64
      - name: read_all
        in: query
        description: If "true", resubmits incomplete queries until the query has completed. Defaults to "false".
        type: string
    post:
      description: send a query to run against a specified array/URI registered to a group/project
      tags:
        - query
      produces:
        - application/json
        - application/capnp
      consumes:
        - application/json
        - application/capnp
      operationId: submitQuery
      parameters:
        - name: query
          in: body
          description: query to run
          schema:
            $ref: "#/definitions/Query"
          required: true
      responses:
        200:
          description: query completed and results are returned in query object
          headers:
            X-TILEDB-CLOUD-TASK-ID:
              type: string
              description: Task ID for just completed query
          schema:
            type: file
            format: byte
            description: The first 8-bytes contains a little-endian ordered unsigned integer that contains the total byte size of the following Query object. If 'read_all' was set, this will repeat with 0-padding until reaching a Query object with a non-incomplete status.
        204:
          description: query completed successfully with no return
        502:
          description: Bad Gateway
        default:
          description: error response
          schema:
            $ref: "#/definitions/Error"