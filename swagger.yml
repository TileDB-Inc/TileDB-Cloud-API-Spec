swagger: "2.0"
info:
  description: TileDB Storage Platform REST API
  title: Tiledb Storage Platform API
  version: 0.0.9

produces:
- application/json
consumes:
- application/json
schemes:
- https
- http

basePath: /v1

securityDefinitions:
  BasicAuth:
    type: basic
  ApiKeyAuth:
    type: apiKey
    in: header
    name: X-TBDSP-API-Key

definitions:
  ArrayType:
    description: TileDB array type
    type: string
    enum: &ARRAYTYPE
      # Dense array
      - dense
      # Sparse array
      - sparse
  Datatype:
    description: TileDB data type
    type: string
    enum: &DATATYPE
      # 32-bit signed integer
      - INT32
      # 64-bit signed integer
      - INT64
      # 32-bit floating point value
      - FLOAT32
      # 64-bit floating point value
      - FLOAT64
      # Character
      - CHAR
      # 8-bit signed integer
      - INT8
      # 8-bit unsigned integer
      - UINT8
      # 16-bit signed integer
      - INT16
      # 16-bit unsigned integer
      - UINT16
      # 32-bit unsigned integer
      - UINT32
      # 64-bit unsigned integer
      - UINT64
      # ASCII string
      - STRING_ASCII
      # UTF-8 string
      - STRING_UTF8
      # UTF-16 string
      - STRING_UTF16
      # UTF-32 string
      - STRING_UTF32
      # UCS2 string
      - STRING_UCS2
      # UCS4 string
      - STRING_UCS4
      # This can be any datatype. Must store (type tag, value) pairs.
      - ANY
  Layout:
    description: Layout of array
    type: string
    enum: &LAYOUT
      # Row-major layout
      - row-major
      # Column-major layout
      - col-major
      # Global-order layout
      - global-order
      # Unordered layout
      - unordered
  Querytype:
    description: Type of query
    type: string
    enum: &QUERYTYPE
      # READ
      - READ
      # Write
      - WRITE
  Querystatus:
    description: STatus of query
    type: string
    enum: &QUERYSTATUS
      # FAILED
      - FAILED
      # COMPLETED
      - COMPLETED
      # INPROGRESS
      - INPROGRESS
      # INCOMPLETE
      - INCOMPLETE
      # UNINITIALIZED
      - UNINITIALIZED
  Compressor:
    description: TileDB compressor setting
    type: string
    enum: &COMPRESSOR
      # No compressor
      - NO_COMPRESSION
      # Gzip compressor
      - GZIP
      # Zstandard compressor
      - ZSTD
      # LZ4 compressor
      - LZ4
      # Blosc compressor using LZ
      - BLOSC_LZ
      # Blosc compressor using LZ4
      - BLOSC_LZ4
      # Blosc compressor using LZ4HC
      - BLOSC_LZ4HC
      # Blosc compressor using Snappy
      - BLOSC_SNAPPY
      # Blosc compressor using zlib
      - BLOSC_ZLIB
      # Blosc compressor using Zstandard
      - BLOSC_ZSTD
      # Run-length encoding compressor
      - RLE
      # Bzip2 compressor
      - BZIP2
      # Double-delta compressor
      - DOUBLE_DELTA
  DomainArray:
    description: Domain object for an array of each type
    type: object
    properties:
      int8:
        type: array
        items:
          type: integer
          format: int8
      uint8:
        type: array
        items:
          type: integer
          format: uint8
      int16:
        type: array
        items:
          type: integer
          format: int16
      uint16:
        type: array
        items:
          type: integer
          format: uint16
      int32:
        type: array
        items:
          type: integer
          format: int32
      uint32:
        type: array
        items:
          type: integer
          format: uint32
      int64:
        type: array
        items:
          type: integer
          format: int64
      uint64:
        type: array
        items:
          type: integer
          format: uint64
      float32:
        type: array
        items:
          type: number
          format: float
      float64:
        type: array
        items:
          type: number
          format: double

  Attribute:
    description: Attribute of array
    type: object
    required:
      - name
      - type
      - compressor
      - compressorLevel
      - cellValNum
    properties:
      name:
        description: Attribute name
        type: string
        example: attribute1
      type:
        $ref: "#/definitions/Datatype"
      compressor:
        $ref: "#/definitions/Compressor"
      compressorLevel:
        description: Level setting for compression
        type: integer
        example: 3
      cellValNum:
        description: Attribute number of values per cell
        type: integer
        example: 1
  Dimension:
    description: Dimension of array
    type: object
    required:
      - type
      - domain
      - nullTileExtent
    properties:
      name:
        description: Dimension name
        type: string
        example: "row"
      type:
        $ref: "#/definitions/Datatype"
      domain:
        description: extent of domain
        $ref: "#/definitions/DomainArray"
      nullTileExtent:
        description: Is tile extent null
        type: boolean
        example: true
      tileExtent:
        description: Extent of tile
        type: object
        properties:
          int8:
            type: integer
            format: int8
          uint8:
            type: integer
            format: uint8
          int16:
            type: integer
            format: int16
          uint16:
            type: integer
            format: uint16
          int32:
            type: integer
            format: int32
          uint32:
            type: integer
            format: uint32
          int64:
            type: integer
            format: int64
          uint64:
            type: integer
            format: uint64
          float32:
            type: integer
            format: float32
          float64:
            type: integer
            format: float64
  Domain:
    description: Domain of array
    type: object
    required:
      - type
      - tileOrder
      - cellOrder
      - dimensions
    properties:
      type:
        $ref: "#/definitions/Datatype"
        description: Domain Type
      tileOrder:
        $ref: "#/definitions/Layout"
        description: Tile Order
      cellOrder:
        $ref: "#/definitions/Layout"
        description: Cell Order
      dimensions:
        type: array
        description: Array of dimensions
        items:
          $ref: "#/definitions/Dimension"
  ArraySchema:
    description: ArraySchema during creation or retrevial
    type: object
    required:
      - version
      - arrayType
      - tileOrder
      - cellOrder
      - capacity
      - coordsCompression
      - coordsCompressionLevel
      - offsetCompression
      - offsetCompressionLevel
      - domain
      - attributes
    properties:
      uri:
        description: URI of schema
        type: string
        example: "s3://<bucket>/test_array"
      version:
        description: file format version
        type: array
        items:
          type: integer
        example: [1,3,0]
      arrayType:
        $ref: "#/definitions/ArrayType"
        description: Type of array
        example: sparse
      tileOrder:
        description: Tile order setting of array
        $ref: "#/definitions/Layout"
        example: row-major
      cellOrder:
        description: Order of cells
        $ref: "#/definitions/Layout"
        example: row-major
      capacity:
        description: Capacity of array
        type: integer
        format: uint64
        example: 100000
      coordsCompression:
        description: Type of compression for coordinates (enum)
        $ref: "#/definitions/Compressor"
        example: "GZIP"
      coordsCompressionLevel:
        description: Level of coordinates compression
        type: integer
        example: 3
      offsetCompression:
        description: Compression type of cell variable offsets (enum)
        $ref: "#/definitions/Compressor"
        example: "GZIP"
      offsetCompressionLevel:
        description: Compression level for cell variable offsets
        type: integer
        example: 3
      domain:
        description: Domain of array
        $ref: "#/definitions/Domain"
      attributes:
        description: Attributes of array
        type: array
        items:
          $ref: "#/definitions/Attribute"
    x-go-type:
      import:
        package: "github.com/TileDB-Inc/TileDB-Go"
        alias: "tiledb"
      type: "ArraySchema"
  AttributeBuffer:
    description: Represents an attribute buffer
    type: object
    required:
      - buffer
    properties:
        type:
          description: Datatype of buffer
          type: string
          $ref: "#/definitions/Datatype"
          example: "INT32"
        buffer:
          description: value buffer
          type: object
          properties:
            int8:
              type: array
              items:
                type: integer
                format: int8
            uint8:
              type: array
              items:
                type: integer
                format: uint8
            int16:
              type: array
              items:
                type: integer
                format: int16
            uint16:
              type: array
              items:
                type: integer
                format: uint16
            int32:
              type: array
              items:
                type: integer
                format: int32
            uint32:
              type: array
              items:
                type: integer
                format: uint32
            int64:
              type: array
              items:
                type: integer
                format: int64
            uint64:
              type: array
              items:
                type: integer
                format: uint64
            float32:
              type: array
              items:
                type: integer
                format: float32
            float64:
              type: array
              items:
                type: integer
                format: float64
            char:
              type: array
              items:
                type: string
        bufferOffset:
          description: offset buffer for variable length attributes
          type: array
          items:
            type: integer
            format: uint64
  Tile:
    description: last tile written
    type: object
    required:
      - type
      - compressor
      - compressorLevel
      - cellSize
      - dimNum
      - buffer
    properties:
      type:
        type: string
        $ref: "#/definitions/Datatype"
        example: "INT32"
      compressor:
        description: Type of compression for buffer (enum)
        $ref: "#/definitions/Compressor"
        example: "GZIP"
      compressorLevel:
        description: Level of buffer compression
        type: integer
        example: 3
      cellSize:
        description: Size of cells for writting
        type: integer
        format: uint64
        example: "10"
      dimNum:
        description: number of dimensions
        type: integer
        format: uint64
        example: "10"
      buffer:
        description: buffer of data
        type: object
        properties:
          int8:
            type: array
            items:
              type: integer
              format: int8
          uint8:
            type: array
            items:
              type: integer
              format: uint8
          int16:
            type: array
            items:
              type: integer
              format: int16
          uint16:
            type: array
            items:
              type: integer
              format: uint16
          int32:
            type: array
            items:
              type: integer
              format: int32
          uint32:
            type: array
            items:
              type: integer
              format: uint32
          int64:
            type: array
            items:
              type: integer
              format: int64
          uint64:
            type: array
            items:
              type: integer
              format: uint64
          float32:
            type: array
            items:
              type: integer
              format: float32
          float64:
            type: array
            items:
              type: integer
              format: float64

  FragmentMetadata:
    description: FragmentMetadata for GLOBAL_ORDER writes
    type: object
    properties:
      attributeIdxMap:
        description: Maps an attribute to an index used in the various vector class members.
        type: object
        additionalProperties:
          type: integer
          format: uint32

      attributeUriMap:
        description: Maps an attribute to its absolute URI within this fragment.
        type: object
        additionalProperties:
          type: string
      attributeVarUriMap:
        description: Maps an attribute to its absolute '_var' URI within this fragment.
        type: object
        additionalProperties:
          type: string
      boundingCoords:
        description: A vector storing the first and last coordinates of each tile.
        type: object
        properties:
          int8:
            type: array
            items:
              type: array
              items:
                type: integer
                format: int8
          uint8:
            type: array
            items:
              type: array
              items:
                type: integer
                format: uint8
          int16:
            type: array
            items:
              type: array
              items:
                type: integer
                format: int16
          uint16:
            type: array
            items:
              type: array
              items:
                type: integer
                format: uint16
          int32:
            type: array
            items:
              type: array
              items:
                type: integer
                format: int32
          uint32:
            type: array
            items:
              type: array
              items:
                type: integer
                format: uint32
          int64:
            type: array
            items:
              type: array
              items:
                type: integer
                format: int64
          uint64:
            type: array
            items:
              type: array
              items:
                type: integer
                format: uint64
          float32:
            type: array
            items:
              type: array
              items:
                type: integer
                format: float32
          float64:
            type: array
            items:
              type: array
              items:
                type: integer
                format: float64

      dense:
        description: True if the fragment is dense, and false if it is sparse.
        type: boolean

      domain:
        description: The (expanded) domain in which the fragment is constrained.
        $ref: "#/definitions/DomainArray"

      fileSizes:
        description: Stores the size of each attribute file.
        type: array
        items:
          type: integer
          format: uint64

      fileVarSizes:
        description: Stores the size of each variable attribute file.
        type: array
        items:
          type: integer
          format: uint64

      fragmentUri:
        description: The uri of the fragment the metadata belongs to.
        type: string

      lastTileCellNum:
        description: Number of cells in the last tile (meaningful only in the sparse case).
        type: integer
        format: uint64

      mbrs:
        # The MBRs (applicable only to the sparse case with irregular tiles).
        description: ignored for now
        type: object

      nextTileOffsets:
        description: The offsets of the next tile for each attribute.
        type: array
        items:
          type: integer
          format: uint64

      nextTileVarOffsets:
        description: The offsets of the next variable tile for each attribute.
        type: array
        items:
          type: integer
          format: uint64

      nonEmptyDomain:
        description: The non-empty domain in which the fragment is constrained.
        $ref: "#/definitions/DomainArray"

      tileIndexBase:
        # Only used in global order writes.
        description: The tile index base which is added to tile indices in setter functions.
        type: integer
        format: uint64

      tileOffsets:
        description:  The tile offsets in their corresponding attribute files.
        type: array
        items:
          type: array
          items:
            type: integer
            format: uint64

      tileVarOffsets:
        description: The variable tile offsets in their corresponding attribute files.
        type: array
        items:
          type: array
          items:
            type: integer
            format: uint64

      tileVarSizes:
        description: The sizes of the uncompressed variable tiles.
        type: array
        items:
          type: array
          items:
            type: integer
            format: uint64

      version:
        description: The version of the library that created this metadata.
        type: array
        items:
          type: integer
          format: uint64

  GlobalWriteState:
    description: state of global writes
    type: object
    required:
      - cellsWritten
      - lastTiles
    properties:
      lastTiles:
        description: last tiles written to disk
        type: array
        items:
          $ref: "#/definitions/Tile"
      cellsWritten:
        description: Cells written so far in global write
        type: object
        additionalProperties:
          type: integer
          format: uint64
      fragmentMetadata:
        description: FragmentMetadata for GLOBAL_ORDER writes
        $ref: "#/definitions/FragmentMetadata"

  Writer:
    type: object
    properties:
      globalWriteState:
        $ref: "#/definitions/GlobalWriteState"
      checkCoordDups:
        type: boolean
      dedupCoords:
        type: boolean
      initialized:
        type: boolean
      fragmentUri:
        type: string

  ReadState:
    description: state for reads
    type: object
    properties:
      initialized:
        description: True if the reader has been initialized.
        type: boolean
      overflowed:
        description: True if the query produced results that could not fit in some buffer.
        type: boolean

      curSubarrayPartition:
        description: The current subarray the query is constrained on.
        $ref: "#/definitions/DomainArray"

      subarrayPartitions:
        description: A list of subarray partitions. The head of the list is the partition to be split next.
        type: object
        properties:
          int8:
            type: array
            items:
              type: array
              items:
                type: integer
                format: int8
          uint8:
            type: array
            items:
              type: array
              items:
                type: integer
                format: uint8
          int16:
            type: array
            items:
              type: array
              items:
                type: integer
                format: int16
          uint16:
            type: array
            items:
              type: array
              items:
                type: integer
                format: uint16
          int32:
            type: array
            items:
              type: array
              items:
                type: integer
                format: int32
          uint32:
            type: array
            items:
              type: array
              items:
                type: integer
                format: uint32
          int64:
            type: array
            items:
              type: array
              items:
                type: integer
                format: int64
          uint64:
            type: array
            items:
              type: array
              items:
                type: integer
                format: uint64
          float32:
            type: array
            items:
              type: array
              items:
                type: integer
                format: float32
          float64:
            type: array
            items:
              type: array
              items:
                type: integer
                format: float64
  QueryReader:
    description: Read struct (can't be called reader due to class name conflict)
    type: object
    properties:
      fragmentMetadata:
        description: The fragment metadata.
        type: array
        items:
          $ref: '#/definitions/FragmentMetadata'
      readState:
        description: To handle incomplete read queries.
        $ref: '#/definitions/ReadState'

  Query:
    type: object
    required:
      - type
      - buffers
      - layout
      - status
    properties:
      type:
        $ref: "#/definitions/Querytype"
      layout:
        $ref: "#/definitions/Layout"
      status:
        $ref: "#/definitions/Querystatus"
      subarray:
        description: Limit dense operations to these dimensions
        $ref: "#/definitions/DomainArray"
      buffers:
        description: map of buffers
        type: object
        additionalProperties:
          $ref: "#/definitions/AttributeBuffer"
      writer:
        description: writer contains data needed for continuation of global write order queries
        $ref: "#/definitions/Writer"
      reader:
        description: reader contains data needed for continuation of reads
        $ref: "#/definitions/QueryReader"
    x-go-type:
      import:
        package: "github.com/TileDB-Inc/TileDB-Go"
        alias: "tiledb"
      type: "Query"

  NonEmptyDomainArray:
    type: object
    description: object represening non-empty domain with dimension name
    properties:
      name:
        type: string
        description: dimension name
        example: "d1"
      domain:
        $ref: "#/definitions/DomainArray"
  NonEmptyDomain:
    type: object
    description: object representing a non-empty domain
    required:
      - nonEmptyDomain
      - isEmpty
    properties:
      nonEmptyDomain:
        type: array
        description: Non Empty Dmoain of array
        items:
          $ref: "#/definitions/NonEmptyDomainArray"
      isEmpty:
        description: Is non-empty domain really empty?
        type: boolean
        example: False

  MaxBufferSizeVar:
    description: Used to return max buffer/var buffer sizes for an array
    type: object
    required:
      - attribute
      - bufferSize
    properties:
      attribute:
        description: name of attribute
        type: string
        example: "attribute1"
      bufferSize:
        description: max size of a buffer for given subarray
        type: integer
        format: uint64
        example: 100
      bufferOffsetSize:
        description: max buffer offset for a given subarray
        type: integer
        format: uint64
        example: 4

  Error:
    type:  object
    required:
      - message
      - code
    properties:
      code:
        type: integer
        format: int64
      message:
        type: string
paths:
  /.stats:
    get:
      description: Fetch libtiledb stat
      tags:
        - stats
      operationId: getTiledbStats
      responses:
        200:
          description: stats
          schema:
            type: object
            properties:
              stats:
                description: string of stats from tiledb
                type: string
        default:
          description: error response
          schema:
            $ref: "#/definitions/Error"
  /arrays/{organization}/{array}:
    parameters:
      - name: organization
        in: path
        description: organization name
        type: string
        required: true
      - name: array
        in: path
        description: name/uri of array that is url-encoded
        type: string
        required: true
    delete:
      description: delete a array
      tags:
        - array
      operationId: deleteArray
      responses:
        204:
          description: delete array successful
        default:
          description: error response
          schema:
            $ref: "#/definitions/Error"
    get:
      description: get an ArraySchema using a url encoded uri
      produces:
        - application/json
        - application/capnp
      consumes:
        - application/json
        - application/capnp
      tags:
        - array
      operationId: getArray
      responses:
        200:
          description: get ArraySchema
          schema:
            $ref: "#/definitions/ArraySchema"
        default:
          description: error response
          schema:
            $ref: "#/definitions/Error"
    post:
      description: create a array schema at a specified URI registered to a group/project
      tags:
        - array
      operationId: createArray
      parameters:
        - name: ArraySchema
          in: body
          description: ArraySchema being created
          schema:
            $ref: "#/definitions/ArraySchema"
          required: true
      responses:
        204:
          description: schema created successfully
        default:
          description: error response
          schema:
            $ref: "#/definitions/Error"
  /arrays/{organization}/{array}/non_empty_domain:
    parameters:
      - name: organization
        in: path
        description: organization name
        type: string
        required: true
      - name: array
        in: path
        description: name/uri of array that is url-encoded
        type: string
        required: true
    get:
      description: get the non empty domain of an array
      tags:
        - array
      operationId: getArrayNonEmptyDomain
      responses:
        200:
          description: get the non empty domain of an array
          schema:
            $ref: "#/definitions/NonEmptyDomain"
        default:
          description: error response
          schema:
            $ref: "#/definitions/Error"
  /arrays/{organization}/{array}/max_buffer_size:
    parameters:
      - name: organization
        in: path
        description: organization name
        type: string
        required: true
      - name: array
        in: path
        description: name/uri of array that is url-encoded
        type: string
        required: true
      - name: subarray
        in: query
        description: subarray to find max buffer size on
        type: array
        items:
          type: number
        required: true
      - name: attribute
        in: query
        description: attribute to fetch max buffer on, all non-variable sized attributes returned if not passed
        type: string
        required: false
    get:
      description: get the max buffer size needed for a subarray and a given attribute (or all non-variable sized attribute)
      tags:
        - array
      operationId: getArrayMaxBufferSize
      responses:
        200:
          description: get the max buffer size of a attribute
          schema:
            type: array
            items:
              $ref: "#/definitions/MaxBufferSizeVar"
        default:
          description: error response
          schema:
            $ref: "#/definitions/Error"
  /arrays/{organization}/{array}/max_buffer_size_var:
    parameters:
      - name: organization
        in: path
        description: organization name
        type: string
        required: true
      - name: array
        in: path
        description: name/uri of array that is url-encoded
        type: string
        required: true
      - name: subarray
        in: query
        description: subarray to find max variable-legnth buffer size on
        type: array
        items:
          type: number
        required: true
      - name: attribute
        in: query
        description: attribute to fetch max buffer on, all variable sized attributes returned if not passed
        type: string
        required: false
    get:
      description: get the max buffer size needed for a subarray and a given attribute (or all variable sized attribute)
      tags:
        - array
      operationId: getArrayMaxBufferSizeVar
      responses:
        200:
          description: get the max buffer size of a attribute
          schema:
            type: array
            items:
              $ref: "#/definitions/MaxBufferSizeVar"
        default:
          description: error response
          schema:
            $ref: "#/definitions/Error"
  /arrays/{organization}/{array}/query/submit:
    parameters:
      - name: organization
        in: path
        description: organization name
        type: string
        required: true
      - name: array
        in: path
        description: name/uri of array that is url-encoded
        type: string
        required: true
      - name: type
        in: query
        description: type of query
        required: true
        type: string
    post:
      description: send a query to run against a specified array/URI registered to a group/project
      tags:
        - query
      produces:
        - application/json
        - application/capnp
      consumes:
        - application/json
        - application/capnp
      operationId: submitQuery
      parameters:
        - name: query
          in: body
          description: query to run
          schema:
            $ref: "#/definitions/Query"
          required: true
      responses:
        200:
          description: query completed and results are returned in query object
          schema:
            $ref: "#/definitions/Query"
        204:
          description: query completed successfully with no return
        default:
          description: error response
          schema:
            $ref: "#/definitions/Error"
  /arrays/{organization}/{array}/query/finalize:
    parameters:
      - name: organization
        in: path
        description: organization name
        type: string
        required: true
      - name: array
        in: path
        description: name/uri of array that is url-encoded
        type: string
        required: true
      - name: type
        in: query
        description: type of query
        required: true
        type: string
    post:
      description: send a query to run against a specified array/URI registered to a group/project
      tags:
        - query
      produces:
        - application/json
        - application/capnp
      consumes:
        - application/json
        - application/capnp
      operationId: finalizeQuery
      parameters:
        - name: query
          in: body
          description: query to run
          schema:
            $ref: "#/definitions/Query"
          required: true
      responses:
        200:
          description: query completed and results are returned in query object
          schema:
            $ref: "#/definitions/Query"
        204:
          description: query completed successfully with no return
        default:
          description: error response
          schema:
            $ref: "#/definitions/Error"
