swagger: "2.0"
info:
  description: TileDB Storage Platform REST API
  title: Tiledb Storage Platform API
  version: 1.4.0

produces:
- application/json
consumes:
- application/json

schemes:
- http
- https

basePath: /v2

securityDefinitions:
  BasicAuth:
    type: basic
  ApiKeyAuth:
    type: apiKey
    in: header
    name: X-TILEDB-REST-API-KEY
  OAuth2:
      type: oauth2
      flow: accessCode
      authorizationUrl: https://oauth2.tiledb.com/oauth2/authorize
      tokenUrl: https://oauth2.tiledb.com/oauth2/token
      scopes:
        read: Grants read access
        write: Grants write access
        admin: Grants read and write access to administrative information

security:
  - BasicAuth: []
  - ApiKeyAuth: []
  # Commented out beacause this breaks the python autogenerated client
  # It always sets the Bearer authorization header even when empty :/
  # - OAuth2: [read, write, admin]

definitions:
  Datatype:
    description: TileDB data type
    type: string
    enum:
      # 32-bit signed integer
      - INT32
      # 64-bit signed integer
      - INT64
      # 32-bit floating point value
      - FLOAT32
      # 64-bit floating point value
      - FLOAT64
      # Character
      - CHAR
      # 8-bit signed integer
      - INT8
      # 8-bit unsigned integer
      - UINT8
      # 16-bit signed integer
      - INT16
      # 16-bit unsigned integer
      - UINT16
      # 32-bit unsigned integer
      - UINT32
      # 64-bit unsigned integer
      - UINT64
      # ASCII string
      - STRING_ASCII
      # UTF-8 string
      - STRING_UTF8
      # UTF-16 string
      - STRING_UTF16
      # UTF-32 string
      - STRING_UTF32
      # UCS2 string
      - STRING_UCS2
      # UCS4 string
      - STRING_UCS4
      # Years
      - DATETIME_YEAR
      # Months
      - DATETIME_MONTH
      # Weeks
      - DATETIME_WEEK
      # Days
      - DATETIME_DAY
      # Hours
      - DATETIME_HR
      # Minutes
      - DATETIME_MIN
      # Seconds
      - DATETIME_SEC
      # Milliseconds
      - DATETIME_MS
      # Microseconds
      - DATETIME_US
      # Nanoseconds
      - DATETIME_NS
      # Picoseconds
      - DATETIME_PS
      # Femtoseconds
      - DATETIME_FS
      # Attoseconds
      - DATETIME_AS
      # This can be any datatype. Must store (type tag, value) pairs.
      - ANY

  Layout:
    description: Layout of array
    type: string
    enum:
      # Row-major layout
      - row-major
      # Column-major layout
      - col-major
      # Global-order layout
      - global-order
      # Unordered layout
      - unordered

  Querytype:
    description: Type of query
    type: string
    enum:
      # READ
      - READ
      # Write
      - WRITE

  Querystatus:
    description: Status of query
    type: string
    enum:
      # FAILED
      - FAILED
      # COMPLETED
      - COMPLETED
      # INPROGRESS
      - INPROGRESS
      # INCOMPLETE
      - INCOMPLETE
      # UNINITIALIZED
      - UNINITIALIZED

  DomainArray:
    description: Domain object for an array of each type
    type: object
    properties:
      int8:
        type: array
        x-omitempty: true
        items:
          type: integer
          format: int8
      uint8:
        type: array
        x-omitempty: true
        items:
          type: integer
          format: uint8
      int16:
        type: array
        x-omitempty: true
        items:
          type: integer
          format: int16
      uint16:
        type: array
        x-omitempty: true
        items:
          type: integer
          format: uint16
      int32:
        type: array
        x-omitempty: true
        items:
          type: integer
          format: int32
      uint32:
        type: array
        x-omitempty: true
        items:
          type: integer
          format: uint32
      int64:
        type: array
        x-omitempty: true
        items:
          type: integer
          format: int64
      uint64:
        type: array
        x-omitempty: true
        items:
          type: integer
          format: uint64
      float32:
        type: array
        x-omitempty: true
        items:
          type: number
          format: float
      float64:
        type: array
        x-omitempty: true
        items:
          type: number
          format: double

  Array:
    description: Represents an open array
    type: object
    required:
      - timestamp
      - queryType
      - uri
    properties:
      timestamp:
        description: timestamp (epoch milliseconds) array is opened at
        type: number
        format: uint64
        example: 1540471791873
      queryType:
        description: Array opened for query type
        $ref: "#/definitions/Querytype"
      uri:
        description: Array uri
        type: string

  AttributeBufferHeader:
    description: Represents an attribute buffer header information
    type: object
    required:
      - name
      - fixedLenBufferSizeInBytes
      - varLenBufferSizeInBytes

    properties:
      name:
        description: Attribute name
        type: string
        example: "attribute1"
      fixedLenBufferSizeInBytes:
        description: Number of bytes in the fixed-length attribute data buffer (offsets for var-len attributes)
        type: integer
        format: uint64
      varLenBufferSizeInBytes:
        description: Number of bytes in the var-length attribute data buffer
        type: integer
        format: uint64
      validityLenBufferSizeInBytes:
        description: Number of bytes for validity in case attribute is nullable
        type: integer
        format: uint64
      originalFixedLenBufferSizeInBytes:
        description: Original user set number of bytes in the fixed-length attribute data buffer
        type: integer
        format: uint64
      originalVarLenBufferSizeInBytes:
        description: Original user set number of bytes in the var-length attribute data buffer
        type: integer
        format: uint64
      originalValidityLenBufferSizeInBytes:
        description: Original user set number of bytes in the validity data buffer
        type: integer
        format: uint64

  Writer:
    type: object
    properties:
      checkCoordDups:
        type: boolean
      checkCoordOOB:
        type: boolean
      dedupCoords:
        type: boolean
      subarrayRanges:
        $ref: "#/definitions/Subarray"
      subarray:
        $ref: "#/definitions/DomainArray"

  SubarrayRanges:
    description: A set of 1D ranges for a subarray
    type: object
    properties:
      type:
        $ref: "#/definitions/Datatype"
      hasDefaultRange:
        description: True if the range is the default range
        type: boolean
      buffer:
        description: The bytes of the ranges
        type: array
        items:
          type: integer
          format: uint8
      bufferSizes:
        description: The list of sizes per range
        type: array
        items:
          type: integer
          format: uint64
      bufferStartSizes:
        description: The list of start sizes per range
        type: array
        items:
          type: integer
          format: uint64


  Subarray:
    description: A Subarray
    type: object
    properties:
      layout:
        $ref: "#/definitions/Layout"
      ranges:
        description: List of 1D ranges, one per dimension
        type: array
        x-omitempty: true
        items:
          $ref: "#/definitions/SubarrayRanges"

  SubarrayPartitioner:
    description: The subarray partitioner
    type: object
    properties:
      subarray:
        $ref: "#/definitions/Subarray"
      budget:
        description: Result size budget (in bytes) for all attributes.
        type: array
        x-omitempty: true
        items:
          $ref: "#/definitions/AttributeBufferSize"
      current:
        description: The current partition info
        type: object
        properties:
          subarray:
            $ref: "#/definitions/Subarray"
          start:
            description: PartitionInfo start
            type: integer
            format: uint64
          end:
            description: PartitionInfo end
            type: integer
            format: uint64
          splitMultiRange:
            description: PartitionInfo splitMultiRange
            type: boolean
      state:
        description: The state information for the remaining partitions to be produced
        type: object
        properties:
          start:
            description: State start
            type: integer
            format: uint64
          end:
            description: State end
            type: integer
            format: uint64
          singleRange:
            description: State singleRange
            type: array
            x-omitempty: true
            items:
              $ref: "#/definitions/Subarray"
          multiRange:
            description: State multiRange
            type: array
            x-omitempty: true
            items:
              $ref: "#/definitions/Subarray"
      memoryBudget:
        description: The memory budget for the fixed-sized attributes and the offsets of the var-sized attributes
        type: integer
        format: uint64
      memoryBudgetVar:
        description: The memory budget for the var-sized attributes
        type: integer
        format: uint64

  ReadState:
    description: state for reads
    type: object
    properties:
      initialized:
        description: True if the reader has been initialized.
        type: boolean

      overflowed:
        description: True if the query produced results that could not fit in some buffer.
        type: boolean

      unsplittable:
        description: True if the current subarray partition is unsplittable.
        type: boolean

      subarrayPartitioner:
        $ref: "#/definitions/SubarrayPartitioner"

  QueryReader:
    description: Read struct (can't be called reader due to class name conflict)
    type: object
    properties:
      layout:
        $ref: "#/definitions/Layout"
      subarray:
        $ref: "#/definitions/Subarray"
      readState:
        description: To handle incomplete read queries.
        $ref: '#/definitions/ReadState'

  Query:
    type: object
    required:
      - type
      - attributeBufferHeaders
      - layout
      - status
      - array
      - totalFixedLengthBufferBytes
      - totalVarLenBufferBytes
    properties:
      type:
        $ref: "#/definitions/Querytype"
      layout:
        $ref: "#/definitions/Layout"
      status:
        $ref: "#/definitions/Querystatus"
      attributeBufferHeaders:
        description: List of attribute buffer headers
        type: array
        x-omitempty: true
        items:
          $ref: "#/definitions/AttributeBufferHeader"
      writer:
        description: writer contains data needed for continuation of global write order queries
        $ref: "#/definitions/Writer"
      reader:
        description: reader contains data needed for continuation of reads
        $ref: "#/definitions/QueryReader"
      array:
        description: Represents an open array
        $ref: "#/definitions/Array"
      totalFixedLengthBufferBytes:
        description: Total number of bytes in fixed size attribute buffers.
        type: integer
        format: uint64
      totalVarLenBufferBytes:
        description: Total number of bytes in variable size attribute buffers.
        type: integer
        format: uint64
      totalValidityBufferBytes:
        description: Total number of bytes in validity buffers
        type: integer
        format: uint64
    x-go-type:
      import:
        package: "github.com/TileDB-Inc/TileDB-Go"
        alias: "tiledb"
      type: "Query"

  AttributeBufferSize:
    type: object
    description: object representing buffer size of an attribute
    required:
      - attribute
      - offsetBytes
      - dataBytes
    properties:
      attribute:
        description: name of attribute
        type: string
      offsetBytes:
        description: buffer size (in bytes) of offset buffer
        type: integer
        format: uint64
      dataBytes:
        description: buffer size (in bytes) of data buffer
        type: integer
        format: uint64

  ArrayActivityLog:
    description: Actvity of an Array
    type: object
    properties:
      event_at:
        description: time event took place (RFC3339)
        type: string
        format: date-time
      action:
        description: Type of the event
        $ref: "#/definitions/ActivityEventType"
      username:
        description: User who performed action
        type: string
        example: "user1"
      bytes_sent:
        description: Bytes sent to client
        type: integer
        format: uint64
        example: 1073741824
      bytes_received:
        description: Bytes recieved from client
        type: integer
        format: uint64
        example: 1073741824
      array_task_id:
        description: uuid of associated array task
        type: string
        example:  "00000000-0000-0000-0000-000000000000"
      id:
        description: id of the activity
        type: string
        example:  "00000000-0000-0000-0000-000000000000"
      query_ranges:
        description: ranges for query
        x-omitempty: true
        type: string
        example: "{\"rows\":[{\"start\": 1, \"end\": 1},{\"start\": 3, \"end\": 4}],\"cols\":[{\"start\": 1, \"end\": 4}]}"
      query_stats:
        description: stats for query
        x-omitempty: true
        type: string
        example: "{\"timers\": {\"Context.StorageManager.read_load_array_schema_from_uri.sum\": 0.0255293, \"...\": \"...\"}, \"counters\": {\"Context.StorageManager.read_unfiltered_byte_num\": 191, \"...\": \"...\"}}"

  ActivityEventType:
    description: Type of activity logged
    type: string
    enum:
      # read_schema operation
      - read_schema
      # max_buffer_sizes operation
      - max_buffer_sizes
      # non_empty_domain operation
      - non_empty_domain
      # query read operation
      - query_read
      # query write operation
      - query_write
      # create operation
      - create
      # delete operation
      - delete
      # register operation
      - register
      # deregister operation
      - deregister
      # udf operations
      - udf
      # get array metadata operation
      - array_metadata_get
      # update array metadata operation
      - array_metadata_update
      # estimated_result_sizes
      - estimated_result_sizes
      # captures enum value "update" (registered UDFs)
      - update
      # captures enum value "info" (registered UDFs)
      - info
      # captures enum value "run" (registered UDFs)
      - run

  ArrayActivityLogData:
    description: Object including array tasks and metadata
    type: object
    properties:
      activitylogs:
        description: Array ArrayActivityLog
        type: array
        x-omitempty: true
        items:
          $ref: "#/definitions/ArrayActivityLog"
      pagination_metadata:
        $ref: "#/definitions/PaginationMetadata"

  PaginationMetadata:
    properties:
      page:
        description: pagination offset. Use it to skip the first ((page - 1) * per_page) items
        type: number
        format: uint64
        example: 1
      per_page:
        description: pagination limit (page size)
        type: number
        format: uint64
        example: 10
      total_pages:
        description: number of total pages with current limit
        type: number
        format: uint64
        example: 14
      total_items:
        description: number of total available items
        type: number
        format: uint64
        example: 138

  Error:
    type:  object
    properties:
      code:
        type: integer
        format: int64
      message:
        type: string

  AccessCredential:
    description: "A union type which may contain a credential to access any one cloud provider."
    type: "object"
    properties:
      name:
        description: "A user-specified name for the key"
        type: string
      provider:
        description: "The service provider that this credential provides access to. This is derived from the one field which is set when creating or updating the credential data."
        $ref: "#/definitions/CloudProvider"
        readOnly: true
      provider_default:
        description: "True if this is the namespace's default credential to be used when connecting to the given cloud provider. There can be at most one default for each unique provider."
        type: boolean
        x-nullable: true
      created_at:
        description: "Time when the credential was created (rfc3339)"
        type: string
        format: date-time
        readOnly: true
      updated_at:
        description: "Time when the credential was last updated (rfc3339)"
        type: string
        format: date-time
        readOnly: true
      credential:
        description: "The credential information itself. Exactly one sub-field may be set. The names match those in the CloudProvider enum."
        type: object
        x-omitempty: true
        properties:
          aws:
            $ref: "#/definitions/AWSCredential"
          azure:
            $ref: "#/definitions/AzureCredential"
      role:
        description: "The role information itself. Exactly one sub-field may be set. The names match those in the CloudProvider enum."
        type: object
        x-omitempty: true
        properties:
          aws:
            $ref: "#/definitions/AWSRole"

  AccessCredentialsData:
    description: Object including credentials and pagination metadata
    type: object
    properties:
      credentials:
        description: List of credentials
        type: array
        x-omitempty: false
        items:
          $ref: "#/definitions/AccessCredential"
      pagination_metadata:
        $ref: "#/definitions/PaginationMetadata"

  AWSCredential:
    description: "Credential information to access Amazon Web Services"
    type: object
    x-nullable: true
    x-omitempty: true
    properties:
      access_key_id:
        description: "The ID of the access key"
        type: string
        x-go-custom-tag: 'validate:"required"'
      secret_access_key:
        description: "The access key's secret. Never returned in responses."
        type: string
        x-go-custom-tag: 'tdbrest:"secret" validate:"required"'

      endpoint:
        description: "The endpoint used for this credential"
        x-nullable: true
        type: string
        example: "https://example.us-west-2.amazonaws.com"

  AzureCredential:
    description: "Credential information to access Microsoft Azure. Each supported property is the snake_case version of its name in an Azure Storage connection string."
    type: object
    x-nullable: true
    x-omitempty: true
    properties:
      account_name:
        description: "The name of the Azure account to access"
        type: string
        x-go-custom-tag: 'validate:"required"'
      account_key:
        description: "The secret key. Never returned in responses."
        type: string
        x-go-custom-tag: 'tdbrest:"secret" validate:"required"'

  AWSRole:
    description: "Role information to access Amazon Web Services"
    type: object
    x-nullable: true
    x-omitempty: true
    properties:
      role_arn:
        description: "The role arn used to access"
        x-go-name: "RoleARN"
        type: string
        x-go-custom-tag: 'validate:"required"'
        example: arn:partition:service:region:account-id:resource-type:resource-id
      external_id:
        description: "The role external id used to access"
        x-go-custom-tag: 'validate:"required"'
        x-go-name: "RoleExternalID"
        type: string
        example: "MzU0M2UwMTItMWJhYy00NWUwLThmZDItZTgwYmQ1NjE5Yjhm"
      endpoint:
        x-nullable: true
        description: "The endpoint used for this role"
        type: string
        example: "https://example.us-west-2.amazonaws.com"

  CloudProvider:
    description: "A service where data is stored or computations take place."
    type: "string"
    enum:
      - "AWS"  # Amazon Web Services
      - "AZURE"  # Microsoft Azure

  MetadataEntry:
    type: object
    description: key/value pair representing a group metadata map entry
    properties:
      key:
        type: string
      type:
        type: string
      valueNum:
        type: integer
        format: uint32
      value:
        x-go-type:
          type: "json.RawMessage" 
          hints:
            noValidation: true
      del:
        type: boolean

  Metadata:
    type: object
    description: user's TileDB metadata
    properties:
      entries:
        description: List of metadata entries
        type: array
        x-omitempty: true
        items:
          $ref: "#/definitions/MetadataEntry"

  GroupCreationRequest:
    type: object
    description: information for creating a new group with the passed configuration 
    required:
      - group_details
    properties:
      config:
        $ref: "#/definitions/TileDBConfig"
      group_details:
        description: Initial attributes for the creation of a group.
        type: object
        properties:
          description:
            description: A human readable description of the contents of the group.
            type: string
          name:
            description: The name of the group. If must be unique within the group.
            type: string
          uri:
            description: uri of group.
            type: string
            x-omitempty: false
          logo:
            description: logo (base64 encoded) for the group. Optional
            type: string
          tags:
            description: optional tags for groups.
            x-omitempty: false
            type: array
            items:
              type: string
              description: tag must be lowercase characters or hypen [a-z-].
          license_id:
            type: string
            x-omitempty: true
            description: License identifier from SPDX License List or Custom.
          license_text:
            type: string
            x-omitempty: true
            description: License text

  InvitationOrganizationJoin:
    description: Encapsulates information regarding inviting people using email to join organization, same permissions for all invitees
    type: object
    required:
      - invitee_email
      - names
      - organization_role
    properties:
      actions:
        description: List of permitted actions
        type: array
        items:
          $ref: "#/definitions/NamespaceActions"
        example:
          - read
          - write
      organization_role:
        description: Role of the invited namespace in the joined organization
        $ref: "#/definitions/OrganizationRoles"
        x-omitempty: false
      invitee_email:
        type: array
        x-omitempty: true
        items:
          type: string
          format: email
      names:
        description: Usernames or UUIDs of the users 
        type: array
        x-omitempty: true
        items:
          type: string

  GroupRegistrationRequest:
    type: object
    description: information for creating a new group with the passed configuration 
    required:
      - group_details
    properties:
      config:
        $ref: "#/definitions/TileDBConfig"
      group_details:
        description: Initial attributes for the creation of a group.
        type: object
        properties:
          description:
            description: A human readable description of the contents of the group.
            type: string
          name:
            description: The name of the group. If must be unique within the group.
            type: string
          parent:
            description: The unique name or id of the parent of the group. If empty, then the new group will be a top level group.
            type: string
          uri:
            description: uri of group.
            type: string
            x-omitempty: false
          logo:
            description: logo (base64 encoded) for the group. Optional
            type: string
          tags:
            description: optional tags for groups.
            x-omitempty: false
            type: array
            items:
              type: string
              description: tag must be lowercase characters or hypen [a-z-].
          license_id:
            type: string
            x-omitempty: true
            description: License identifier from SPDX License List or Custom.
          license_text:
            type: string
            x-omitempty: true
            description: License text
          region:
            type: string
            x-omitempty: true
            description: region of the group 
          access_credentials_name:
            description: the name of the access credentials to use. if unset, the default credentials will be used.
            type: string

  GroupContentsRetrievalResponse:
    description: Object including a page of members of a group and pagination metadata
    type: object
    properties:
      members:
        description: Groups members
        type: array
        x-omitempty: true
        items:
          $ref: "#/definitions/GroupMember"
      metadata:
        description: Group metadata 
        x-omitempty: true
        $ref: "#/definitions/Metadata"

  GroupContentsRetrievalRequest:
    description: Request the contents of a group
    type: object
    properties:
      config:
        description: config to use to retrieve the contents
        $ref: "#/definitions/TileDBConfig"

  GroupContentsChangesRequest:
    description: Updates the contents group
    type: object
    properties:
      config:
        description: config to use to retrieve the contents
        $ref: "#/definitions/TileDBConfig"
      group_changes:
        type: object
        properties:
          members_to_remove:
            description: optional series of members to remove
            x-omitempty: false
            type: array
            items:
              type: string
              description: uris of members to remove
          members_to_add:
            description: optional series of members to add
            x-omitempty: false
            type: array
            items:
              description: group members to add
              $ref: "#/definitions/GroupMember"

  GroupMetadataUpdateRequest:
    description: Updates the metadata of a group
    type: object
    required:
      - metadata
    properties:
      config:
        description: config to use to retrieve the contents
        $ref: "#/definitions/TileDBConfig"
      metadata:
        $ref: "#/definitions/Metadata"

  GroupMetadataRetrievalRequest:
    description: Retrieves the metadata of a group
    type: object
    properties:
      config:
        type: object
        description: config to use to retrieve the contents
        $ref: "#/definitions/TileDBConfig"

  GroupMemberType:
    description: File types that can be included in groups
    type: string
    enum:
      # Group
      - GROUP
      # Array
      - ARRAY

  GroupMemberAssetType:
    description: Specific file types of group members
    type: string
    enum:
      # Group
      - group
      # Array
      - array
      # Notebook
      - notebook
      # Dashboard
      - dashboard
      # UDF
      - user_defined_function
      # ML Model
      - ml_model
      # Files
      - file

  GroupMember:
    description: A groups member, array or another groups, to add or remove from an existing group.
    type: object
    properties:
      name:
        description: The name of the member 
        type: string
      uri:
        description: The uri of the member
        type: string
      type:
        $ref: '#/definitions/GroupMemberType'

  TileDBConfig:
    description: TileDB config used for interaction with the embedded library
    type: object
    properties:
      entries:
        type: array
        items:
          type: object
          properties:
            key:
              type: string 
            value:
              type: string

  FileUploaded:
    description: Uploaded file name and information
    type: object
    required:
      - id
    properties:
      output_uri:
        type: string
        description: output location of the TileDB File
      file_name:
        type: string
        description: name of the file uploaded
      id:
        description: unique ID of the uploaded file
        type: string
        example: "00000000-0000-0000-0000-000000000000"
        x-omitempty: false

paths:
  /arrays/{namespace}/{array}/query/submit:
    parameters:
      - name: namespace
        in: path
        description: namespace array is in (an organization name or user's username)
        type: string
        required: true
      - name: array
        in: path
        description: name/uri of array that is url-encoded
        type: string
        required: true
      - name: type
        in: query
        description: type of query
        required: true
        type: string
      - name: Content-Type
        in: header
        description: Content Type of input and return mime
        type: string
        required: true
        default: application/json
      - name: X-Payer
        in: header
        description: Name of organization or user who should be charged for this request
        type: string
      - name: open_at
        description: open_at for array in unix epoch
        in: query
        type: integer
        format: uint64
      - name: read_all
        in: query
        description: If "true", resubmits incomplete queries until the query has completed. Defaults to "false".
        type: string
    post:
      description: send a query to run against a specified array/URI registered to a group/project
      tags:
        - query
      produces:
        - application/json
        - application/capnp
      consumes:
        - application/json
        - application/capnp
      operationId: submitQuery
      parameters:
        - name: query
          in: body
          description: query to run
          schema:
            $ref: "#/definitions/Query"
          required: true
      responses:
        200:
          description: query completed and results are returned in query object
          headers:
            X-TILEDB-CLOUD-TASK-ID:
              type: string
              description: Task ID for just completed query
          schema:
            type: file
            format: byte
            description: The first 8-bytes contains a little-endian ordered unsigned integer that contains the total byte size of the following Query object. If 'read_all' was set, this will repeat with 0-padding until reaching a Query object with a non-incomplete status.
        204:
          description: query completed successfully with no return
        502:
          description: Bad Gateway
        default:
          description: error response
          schema:
            $ref: "#/definitions/Error"

  /arrays/{namespace}/{array}/activity:
    parameters:
      - name: namespace
        in: path
        description: namespace array is in (an organization name or user's username)
        type: string
        required: true
      - name: array
        in: path
        description: name/uri of array that is url-encoded
        type: string
        required: true
      - name: start
        in: query
        description: "Start time of window of fetch logs, unix epoch in seconds (default: seven days ago)"
        type: integer
        format: uint64
        required: false
      - name: end
        in: query
        description: "End time of window of fetch logs, unix epoch in seconds (default: current utc timestamp)"
        type: integer
        format: uint64
        required: false
      - name: event_types
        in: query
        collectionFormat: multi
        type: array
        items:
          type: string
        description: Event values can be one or more of the following read, write, create, delete, register, deregister, comma separated
      - name: task_id
        in: query
        type: string
        description: Array task id To filter activity to
      - name: has_task_id
        in: query
        type: boolean
        description: Excludes activity log results that does not contain an array task uuid
      - name: page
        in: query
        description: pagination offset
        type: integer
        required: false
      - name: per_page
        in: query
        description: pagination limit
        type: integer
        required: false
    get:
      description: get array activity logs
      tags:
        - array
      operationId: arrayActivityLog
      responses:
        200:
          description: log of array activity
          schema:
              $ref: "#/definitions/ArrayActivityLogData"
        502:
          description: Bad Gateway
        default:
          description: error response
          schema:
            $ref: "#/definitions/Error"

  /credentials/{namespace}:
    parameters:
      - name: namespace
        in: path
        description: namespace
        required: true
        type: string
      - name: provider
        in: query
        description: "Show only the credentials from this provider. This should be one of the CloudProvider enum values."
        type: string
      - name: page
        in: query
        description: pagination offset
        type: integer
      - name: per_page
        in: query
        description: pagination limit
        type: integer
    get:
      tags:
        - user
        - organization
      description: "List the credentials available in the namespace"
      operationId: listCredentials
      responses:
        200:
          description: "Available credentials are returned"
          schema:
            $ref: "#/definitions/AccessCredentialsData"
        502:
          description: Bad Gateway
        default:
          description: error response
          schema:
            $ref: "#/definitions/Error"
    post:
      tags:
        - user
        - organization
      description: "Create a new credential for the namespace"
      operationId: addCredential
      parameters:
        - name: accessCredential
          in: body
          description: "The new credentials to be created."
          schema:
            $ref: "#/definitions/AccessCredential"
          required: true
      responses:
        204:
          description: "The new credential was successfully added."
        502:
          description: Bad Gateway
        default:
          description: "error response"
          schema:
            $ref: "#/definitions/Error"
            
  /invitations/{organization}/join:
    parameters:
      - name: organization
        in: path
        description: name or UUID of organization
        type: string
        required: true
    post:
      tags:
        - invitation
      description: Sends email to multiple recipients with joining information regarding an organization
      operationId: joinOrganization
      parameters:
        - name: invitation
          in: body
          description: list of email recipients or TileDB-cloud names
          schema:
            $ref: "#/definitions/InvitationOrganizationJoin"
          required: true
      responses:
        204:
          description: Email sent successfully to user for email confirmation link
        400:
          description: Bad Request
        502:
          description: Bad Gateway
        default:
          description: error response
          schema:
            $ref: "#/definitions/Error"

  /credentials/{namespace}/{name}:
    parameters:
      - name: namespace
        in: path
        description: namespace
        required: true
        type: string
      - name: name
        in: path
        description: "A URL-safe version of the credential's user-provided name"
        required: true
        type: string
    get:
      tags:
        - user
        - organization
      description: "Retrieve an access credential by name"
      operationId: getCredential
      responses:
        200:
          description: "Credential exists and can be returned"
          schema:
            $ref: "#/definitions/AccessCredential"
        502:
          description: Bad Gateway
        default:
          description: "error response"
          schema:
            $ref: "#/definitions/Error"
    patch:
      tags:
        - user
        - organization
      description: "Update the named access credential. This will also update the information used to access arrays set to use this credential."
      operationId: updateCredential
      parameters:
        - name: accessCredential
          in: body
          description: "Changes to make to this credential"
          schema:
            $ref: "#/definitions/AccessCredential"
          required: true
      responses:
        204:
          description: "The credential was updated successfully"
        502:
          description: Bad Gateway
        default:
          description: "Error response"
          schema:
            $ref: "#/definitions/Error"
    delete:
      tags:
        - user
        - organization
      description: "Delete the named access credential. Any arrays still set to use this credential will use the namespace's default and may become unreachable."
      operationId: deleteCredential
      responses:
        204:
          description: "The credential was deleted successfully"
        502:
          description: Bad Gateway
        default:
          description: "Error response"
          schema:
            $ref: "#/definitions/Error"

  /groups/{group_namespace}/{group_name}/metadata:
    parameters:
      - name: group_namespace
        type: string
        in: path
        required: true
        description: The namespace of the group
      - name: group_name
        type: string
        in: path
        required: true
        description: The unique name or id of the group
    post:
      operationId: getGroupMetadata
      description: get metadata on a group using the requested config
      tags:
        - groups
      parameters:
        - name: metadataRetrieval
          in: body
          schema:
            $ref: "#/definitions/GroupMetadataRetrievalRequest"
      responses:
        200:
          description: retrieve metadata for a group
          schema:
            $ref: "#/definitions/Metadata"
        502:
          description: Bad Gateway
        default:
          description: error response
          schema:
            $ref: "#/definitions/Error"
    put:
      operationId: updateGroupMetadata
      description: update metadata on a group
      tags:
        - groups
      parameters:
        - name: metadataUpdating
          in: body
          schema:
            $ref: "#/definitions/GroupMetadataUpdateRequest"
      responses:
        200:
          description: group metadata updated successfully
        502:
          description: Bad Gateway
        default:
          description: error response
          schema:
            $ref: "#/definitions/Error"

  /groups/{group_namespace}:
    parameters:
      - name: group_namespace
        type: string
        in: path
        required: true
        description: The namespace of the group
      - name: X-TILEDB-CLOUD-ACCESS-CREDENTIALS-NAME
        in: header
        description: Optional registered access credentials to use for creation
        type: string
        required: false
    post:
      description: Creates an empty group
      operationId: createGroup
      tags:
        - groups
      parameters:
        - name: groupCreation
          in: body
          schema:
            $ref: "#/definitions/GroupCreationRequest"
      responses:
        201:
          description: group created successfully
        502:
          description: Bad Gateway
        default:
          description: error response
          schema:
            $ref: "#/definitions/Error"
    put:
      description: Registers an already existing group 
      operationId: registerGroup
      tags:
        - groups
      parameters:
        - name: groupRegistration
          in: body
          schema:
            $ref: "#/definitions/GroupRegistrationRequest"
      responses:
        201:
          description: group created successfully
        502:
          description: Bad Gateway
        default:
          description: error response
          schema:
            $ref: "#/definitions/Error"

  /groups/{group_namespace}/{group_name}:
    parameters:
      - name: group_namespace
        type: string
        in: path
        required: true
        description: The namespace of the group
      - name: group_name
        type: string
        in: path
        required: true
        description: The unique name or id of the group
      - name: X-TILEDB-CLOUD-ACCESS-CREDENTIALS-NAME
        in: header
        description: Optional registered access credentials to use for creation
        type: string
        required: false
    options:
      description: can be used to check if the resource exists 
      tags:
        - groups
      responses:
        404:
          description: the resource does not exist 
        204:
          description: the resource exists 
        502:
          description: Bad Gateway
        default:
          description: error response
          schema:
            $ref: "#/definitions/Error"
    post:
      description: Retrieves the contents of a group
      operationId: retrieveGroup
      tags:
        - groups
      parameters:
        - name: groupRetrieval
          in: body
          schema:
            $ref: "#/definitions/GroupContentsRetrievalRequest"
      responses:
        200:
          description: group created successfully
          schema:
            $ref: "#/definitions/GroupContentsRetrievalResponse"
        502:
          description: Bad Gateway
        default:
          description: error response
          schema:
            $ref: "#/definitions/Error"
    patch:
      description: Change the contents of the group
      operationId: updateGroupContents
      tags:
        - groups
      parameters:
        - name: groupUpdateContents 
          in: body
          schema:
            $ref: "#/definitions/GroupContentsChangesRequest"
      responses:
        204:
          description: attributes changed successfully
        502:
          description: Bad Gateway
        default:
          description: error response
          schema:
            $ref: "#/definitions/Error"
    delete:
      description: Deregisters a group
      operationId: deregisterGroup
      tags:
        - groups
      responses:
        200:
          description: group deregistered successfully
        502:
          description: Bad Gateway
        default:
          description: error response
          schema:
            $ref: "#/definitions/Error"

  /files/{namespace}/{array}/upload:
    parameters:
      - type: string
        name: namespace
        in: path
        required: true
        description: The namespace of the file
      - name: array
        in: path
        description: name/uri of array that is url-encoded
        type: string
        required: true
      - name: X-TILEDB-CLOUD-ACCESS-CREDENTIALS-NAME
        in: header
        description: Optional registered access credentials to use for creation
        type: string
        required: false
      - name: Content-Type
        in: header
        description: Content Type of input
        type: string
        required: true
        default: application/octet-stream
      - name: name
        in: query
        description: name of the TileDB array to create, if missing {array} is used
        type: string
        required: false
      - name: filename
        in: query
        description: original file name
        type: string
        required: false
      - name: filesize
        in: query
        description: size of the file to upload in bytes
        type: integer
        format: uint64
        required: true
      - name: mimetype
        in: query
        description: |
          Mime type of the uploaded file. Autogenerated clients do
          not always support changing the content type param. Server will
          always use mimetype query param to set mimetype for file,
          if it is not set Content-Type will be used
        type: string
        required: false
    post:
      description: Upload a file at the specified location and wrap it in TileDB Array
      consumes:
        - application/octet-stream
      produces:
        - application/json
      tags:
        - files
      operationId: HandleUploadFile
      parameters:
        - name: file
          in: body
          description: file to upload
          schema:
            type: string
            format: binary
            description: File contents
          required: true
      responses:
        201:
          description: File uploaded
          schema:
            $ref: "#/definitions/FileUploaded"
        502:
          description: Bad Gateway
        default:
          description: error response
          schema:
            $ref: "#/definitions/Error"